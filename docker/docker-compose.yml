version: "3"
services:
  postgres-data:
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - "${HOME}/docker/volumes/postgres:/var/lib/postgresql/data"
    environment:
      - "POSTGRES_PASSWORD=${PSQLDBPASS}"
  postgres-bibles:
    image: postgres
    environment:
      - "POSTGRES_PASSWORD=${PSQLDBPASS}"
      - "POSTGRES_USER=postgres"
    ports:
      - 5434:5432
    volumes:
      - "${HOME}/docker/volumes/postgres-bibles:/var/lib/postgresql/data"
  redis:
    image: redis:alpine
    expose:
      - 6379
    ports:
      - 6379:6379
  zookeeper:
    image: 'bitnami/zookeeper:3'
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:2'
    ports:
      - '9092:9092'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      #- KAFKA_CFG_TOPICS=persistenceServiceTopic
    depends_on:
      - zookeeper
  confsvr:
    env_file:
     - biblestudy_envfile.env
    build: ../confsvr/
    environment:
      EUREKASERVER_URI: "http://eurekasvr:8761/eureka"
      EUREKASERVER_PORT: "8761"
    expose:
      - 8888
    ports:
      - 8888:8888
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
  authenticationservice:
    env_file:
      - biblestudy_envfile.env
    environment:
      CONFIGSERVER_URI: "http://confsvr:8888"
      EUREKASERVER_URI: "http://eurekasvr:8761/eureka"
      KAFKASERVER_URI: "kafka"
      ZKSERVER_URI: "zookeeper"
      DATABASESERVER_PORT: "5432"
      EUREKASERVER_PORT:   "8761"
      CONFIGSERVER_PORT:   "8888"
      ZUULSERVER_PORT:     "5555"
      KAFKASERVER_PORT:    "2181"
      REDIS_PORT:          "6379"
    build: ../authenticationservice/
    depends_on:
      - zuulsvr
      - postgres-data
      - confsvr
    expose:
      - 8901
    ports:
      - 8901:8901
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
  eurekasvr:
    env_file:
      - biblestudy_envfile.env
    environment:
      CONFIGSERVER_URI: "http://confsvr:8888"
      CONFIGSERVER_PORT:   "8888"
    build: ../eurekasvr/
    depends_on:
      - confsvr
    expose:
      - 8761
    ports:
      - 8761:8761
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
  zuulsvr:
    env_file: biblestudy_envfile.env
    environment:
      CONFIGSERVER_URI: "http://confsvr:8888"
      EUREKASERVER_URI: "http://eurekasvr:8761/eureka"
      EUREKASERVER_PORT:   "8761"
      CONFIGSERVER_PORT:   "8888"
    build: ../zuulsvr/
    depends_on:
      - eurekasvr
      - confsvr
    expose:
      - 5555
    ports:
      - 5555:5555
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
  mybiblestudywebapp:
    env_file: biblestudy_envfile.env
    environment:
      CONFIGSERVER_URI: "http://confsvr:8888"
      EUREKASERVER_URI: "http://eurekasvr:8761/eureka"
      KAFKASERVER_URI: "kafka"
      ZKSERVER_URI: "zookeeper"
      PSQLDBDRIVER: "org.postgresql.Driver"
      PSQLDBURL: "jdbc:postgresql://postgres-data:5432/postgres"
      PSQLDBUSER: "postgres"
      PSQLDBPASS: "password"
      DATABASESERVER_PORT: "5432"
      EUREKASERVER_PORT:   "8761"
      CONFIGSERVER_PORT:   "8888"
      ZUULSERVER_PORT:     "5555"
      KAFKASERVER_PORT:    "2181"
      REDIS_PORT:          "6379"
    build: ../mybiblestudyservice/
    depends_on:
      - zuulsvr
    expose:
      - 8080
    ports:
      - 8080:8080
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
  #  restart: unless-stopped
  bibletextservice:
    env_file:
      - biblestudy_envfile.env
    environment:
      CONFIGSERVER_URI: "http://confsvr:8888"
      EUREKASERVER_URI: "http://eurekasvr:8761/eureka"
      KAFKASERVER_URI: "kafka"
      ZKSERVER_URI: "zookeeper"
      PSQLDBDRIVER: "org.postgresql.Driver"
      PSQLBIBLESDBURL: "jdbc:postgresql://postgres-bibles:5432/postgres"
      PSQLDBUSER: "postgres"
      PSQLDBPASS: "password"
      DATABASESERVER_PORT: "5432"
      EUREKASERVER_PORT:   "8761"
      CONFIGSERVER_PORT:   "8888"
      ZUULSERVER_PORT:     "5555"
      KAFKASERVER_PORT:    "2181"
      REDIS_PORT:          "6379"
    build: ../bibletextservice/
    depends_on:
      - zuulsvr
      - postgres-bibles
      - confsvr
    expose:
      - 8081
    ports:
      - 8081:8081
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
  persistenceservice:
    env_file: biblestudy_envfile.env
    build: ../persistenceservice/
    environment:
      CONFIGSERVER_URI: "http://confsvr:8888"
      EUREKASERVER_URI: "http://eurekasvr:8761/eureka"
      KAFKASERVER_URI: "kafka"
      ZKSERVER_URI: "zookeeper"
      PSQLDBDRIVER: "org.postgresql.Driver"
      PSQLDBURL: "jdbc:postgresql://postgres-data:5432/postgres"
      PSQLDBUSER: "postgres"
      PSQLDBPASS: "password"
      DATABASESERVER_PORT: "5432"
      EUREKASERVER_PORT:   "8761"
      CONFIGSERVER_PORT:   "8888"
      ZUULSERVER_PORT:     "5555"
      KAFKASERVER_PORT:    "2181"
      REDIS_PORT:          "6379"
    depends_on:
      - zuulsvr
      - postgres-data
    expose:
      - 8082
    ports:
      - 8082:8082
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    ports:
      - "9200:9200"
    environment:
      - "discovery.type=single-node"
    #volumes:
    #  - "/var/lib/elasticsearch/data:/usr/share/elasticsearch/data:rw"             # Persistence data

  logstash:
    image: docker.elastic.co/logstash/logstash:7.2.0
    ports:
      - "25826:25826"
      - "5044:5044"
    volumes:
      - ./elastic/logstash/pipeline:/usr/share/logstash/pipeline:ro                # Pipeline configuration
    restart: on-failure
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.2.0
    ports:
      - "5601:5601"
    restart: on-failure
    depends_on:
      - elasticsearch
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.2.0
    volumes:
      - ./elastic/filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro # Configuration file
      - /var/lib/docker/containers:/var/lib/docker/containers:ro           # Docker logs
      - /var/run/docker.sock:/var/run/docker.sock:ro                       # Additional information about containers
      - /var/lib/filebeat/data:/usr/share/filebeat/data:rw                 # Persistence data
    user: root                                                             # Allow access to log files and docker.sock
    restart: on-failure
    depends_on:
      - logstash

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
